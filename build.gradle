plugins {
    id 'org.springframework.boot' version '2.2.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'net.ltgt.apt' version '0.8'
    id 'java'
    id 'war'
}

def mapStructVersion = '1.3.1.Final'
def servletVersion = '4.0.1'
def servletApiVersion = '2.3.3'
def jstlVersion = '1.2'

group 'testing-programm'
version '0.0.1'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    compile "org.mapstruct:mapstruct:${mapStructVersion}"
    compile "javax.servlet:jstl:${jstlVersion}"
    compileOnly 'org.projectlombok:lombok'
    providedCompile "group: 'javax.servlet', name: 'javax.servlet-api', version: ${servletVersion}"
    providedCompile "group: 'javax.servlet.jsp', name: 'javax.servlet.jsp-api', version: ${servletApiVersion}"
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    //implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapStructVersion}"
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
   // testImplementation 'org.springframework.security:spring-security-test'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
}

compileJava {
    options.compilerArgs = [
            '-Amapstruct.suppressGeneratorTimestamp=true',
            '-Amapstruct.suppressGeneratorVersionInfoComment=true',
            '-Amapstruct.defaultComponentModel=spring'
    ]
}

test {
    useJUnitPlatform()
}
